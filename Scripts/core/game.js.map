{"version":3,"sources":["core/game.ts"],"names":["init","addControl","addStatsObject","gameLoop","setupRenderer","setupCamera"],"mappings":"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","file":"core/game.js","sourcesContent":["/// <reference path=\"_reference.ts\"/>\n\n// MAIN GAME FILE\n\n// THREEJS Aliases\nimport Scene = THREE.Scene;\nimport Renderer = THREE.WebGLRenderer;\nimport PerspectiveCamera = THREE.PerspectiveCamera;\nimport BoxGeometry = THREE.BoxGeometry;\nimport CubeGeometry = THREE.CubeGeometry;\nimport PlaneGeometry = THREE.PlaneGeometry;\nimport SphereGeometry = THREE.SphereGeometry;\nimport Geometry = THREE.Geometry;\nimport AxisHelper = THREE.AxisHelper;\nimport LambertMaterial = THREE.MeshLambertMaterial;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport Material = THREE.Material;\nimport Mesh = THREE.Mesh;\nimport Object3D = THREE.Object3D;\nimport SpotLight = THREE.SpotLight;\nimport PointLight = THREE.PointLight;\nimport AmbientLight = THREE.AmbientLight;\nimport Control = objects.Control;\nimport GUI = dat.GUI;\nimport Color = THREE.Color;\nimport Vector3 = THREE.Vector3;\nimport Face3 = THREE.Face3;\nimport Point = objects.Point;\nimport CScreen = config.Screen;\nimport Clock = THREE.Clock;\nimport FirstPersonControls = THREE.FirstPersonControls;\n\n//Custom Game Objects\nimport gameObject = objects.gameObject;\n\n// setup an IIFE structure (Immediately Invoked Function Expression)\nvar game = (() => {\n\n    var scene: Scene = new Scene();\n    var renderer: Renderer;\n    var camera: PerspectiveCamera;\n    var axes: AxisHelper;\n    var plane: Mesh;\n    var sun: Mesh;\n    var raedon: Mesh;\n    var blueBall: Mesh;\n    var redDevil: Mesh;\n    var moonLike: Mesh;\n    var icing: Mesh;\n    var eco: Mesh;\n    var sphereGeometry: SphereGeometry;\n    var sphereMaterial: LambertMaterial;\n    var ambientLight: AmbientLight;\n    var spotLight: SpotLight;\n    var control: Control;\n    var gui: GUI;\n    var stats: Stats;\n    var step: number = 0;\n    var clock: Clock;\n    var emptyRaedon: Object3D;\n    var emptyBlueBall: Object3D;\n    var emptyRedDevil: Object3D;\n    var emptyMoonLike: Object3D;\n    var emptyIcing: Object3D;\n    var emptyEco: Object3D;\n\n    function init() {\n        // Instantiate a new Scene object\n        //scene = new Scene();\n\n        // setup a THREE.js Clock object\n        clock = new Clock();\n\n        setupRenderer(); // setup the default renderer\n\t\n        setupCamera(); // setup the camera        \n    \n        //Add a Plane to the Scene\n        plane = new gameObject(\n            new PlaneGeometry(20, 20, 1, 1),\n            new LambertMaterial({ color: 0xf4a460 }),\n            0, 0, 0);\n        plane.rotation.x = -0.5 * Math.PI;\n        plane.name = \"ground\";\n        scene.add(plane);\n        console.log(\"Added Plane Primitive to scene...\");\n        \n        // Add a Sun to the Scene\n        sphereGeometry = new SphereGeometry(2.0, 25, 25);\n        sphereMaterial = new LambertMaterial({ color: 0xD78415 });\n        sun = new gameObject(sphereGeometry, sphereMaterial, 0, 2.5, 0);\n        sun.name = \"The Sun\";\n        scene.add(sun);\n        console.log(\"Added Sun (Sphere Primitive) to the Scene\");   \n        \n        // Add an Empty Raedon to the scene\n        emptyRaedon = new Object3D();\n        emptyRaedon.position.set(0, 0, 0);\n        sun.add(emptyRaedon);\n        console.log(\"Added Empty Raedon to the sun object...\");\n\n        // Add planet Raedon to the scene\n        raedon = new gameObject(\n            new SphereGeometry(0.2, 22, 22),\n            new LambertMaterial({ color: 0x4C0700 }),5,0,0);\n\n        emptyRaedon.add(raedon)\n        console.log(\"Added Raedon to empty Raedon...\");\n        \n        // Add an Empty Blue Ball to the scene\n        emptyBlueBall = new Object3D();\n        emptyBlueBall.position.set(0, 0, 0);\n        sun.add(emptyBlueBall);\n        console.log(\"Added emptyBlueBall to the sun object...\");\n\n        // Add planet Blue Ball to the scene\n        blueBall = new gameObject(\n            new SphereGeometry(0.3, 22, 22),\n            new LambertMaterial({ color: 0x2E8195 }),7,0,0);\n\n        emptyBlueBall.add(blueBall)\n        console.log(\"Added Blue Ball to emptyBlueBall...\");\n        \n        // Add an Empty Red Devil to the scene\n        emptyRedDevil = new Object3D();\n        emptyRedDevil.position.set(0, 0, 0);\n        sun.add(emptyRedDevil);\n        console.log(\"Added emptyRedDevil to the sun object...\");\n\n        // Add planet redDevil to the scene\n        redDevil = new gameObject(\n            new SphereGeometry(0.7, 22, 22),\n            new LambertMaterial({ color: 0xF14545 }),10,0,0);\n\n        emptyRedDevil.add(redDevil)\n        console.log(\"Added redDevil to emptyRedDevil...\");\n        \n        // Add an Empty Moon Like to the scene\n        emptyMoonLike = new Object3D();\n        emptyMoonLike.position.set(0, 0, 0);\n        sun.add(emptyMoonLike);\n        console.log(\"Added emptyMoonLike to the sun object...\");\n\n        // Add planet moonLike to the scene\n        moonLike = new gameObject(\n            new SphereGeometry(0.55, 18, 18),\n            new LambertMaterial({ color: 0x908D8D }),13,0,0);\n\n        emptyMoonLike.add(moonLike)\n        console.log(\"Added moonLike to emptyMoonLike...\");\n        \n        // Add an Empty Icing to the scene\n        emptyIcing = new Object3D();\n        emptyIcing.position.set(0, 0, 0);\n        sun.add(emptyIcing);\n        console.log(\"Added emptyIcing to the sun object...\");\n\n        // Add planet icing to the scene\n        icing = new gameObject(\n            new SphereGeometry(0.35, 18, 18),\n            new LambertMaterial({ color: 0xA156CB }),15,0,0);\n\n        emptyIcing.add(icing)\n        console.log(\"Added icing to emptyIcing...\");\n        \n        // Add an Empty Eco to the scene\n        emptyEco= new Object3D();\n        emptyEco.position.set(0, 0, 0);\n        sun.add(emptyEco);\n        console.log(\"Added emptyEco to the sun object...\");\n\n        // Add planet icing to the scene\n        eco = new gameObject(\n            new SphereGeometry(0.3, 18, 18),\n            new LambertMaterial({ color: 0x2DCD49 }),17,0,0);\n\n        emptyEco.add(eco)\n        console.log(\"Added eco to emptyEco...\");\n\n        // Add a SpotLight to the scene\n        spotLight = new SpotLight(0xffffff);\n        spotLight.position.set(5.6, 23.1, 5.4);\n        spotLight.rotation.set(-0.8, 42.7, 19.5);\n        spotLight.intensity = 2;\n        spotLight.shadowCameraNear = 1;\n        spotLight.shadowMapHeight = 2048;\n        spotLight.shadowMapWidth = 2048;\n        spotLight.angle = 60 * (Math.PI / 180);\n        spotLight.distance = 200;\n        spotLight.castShadow = true;\n        scene.add(spotLight);\n        console.log(\"Added a SpotLight Light to Scene\");\n    \n        \n        // add controls\n        gui = new GUI();\n        control = new Control(0.001);\n        addControl(control);\n\n        // add an axis helper to the scene\n        axes = new AxisHelper(20);        \n        eco.add(axes);\n        console.log(\"Added Axis Helper to scene...\");\n        \n        // Add framerate stats\n        addStatsObject();\n        console.log(\"Added Stats to scene...\");\n\n        document.body.appendChild(renderer.domElement);\n        gameLoop(); // render the scene\t\n\n    }\n\n    function addControl(controlObject: Control): void {\n        gui.add(controlObject, 'rotationSpeed', -0.05, 0.20);\n    }\n\n    function addStatsObject() {\n        stats = new Stats();\n        stats.setMode(0);\n        stats.domElement.style.position = 'absolute';\n        stats.domElement.style.left = '0px';\n        stats.domElement.style.top = '0px';\n        document.body.appendChild(stats.domElement);\n    }\n\n    // Setup main game loop\n    function gameLoop(): void {\n        stats.update();\n        var delta: number = clock.getDelta();\n\n        if(control.rotationSpeed!=0){\n        sun.rotation.y += control.rotationSpeed;\n        \n        emptyRaedon.rotation.y += control.rotationSpeed + 0.065;\n        \n        emptyBlueBall.rotation.y += control.rotationSpeed + 0.05;\n        \n        emptyRedDevil.rotation.y += control.rotationSpeed + 0.015;\n        \n        emptyMoonLike.rotation.y += control.rotationSpeed + 0.005;\n        \n        emptyIcing.rotation.y += control.rotationSpeed + 0.002;\n        \n        emptyEco.rotation.y += control.rotationSpeed + 0.0005;\n        \n        }\n        //firstPersonControls.update(delta);\n        \n        // render using requestAnimationFrame\n        requestAnimationFrame(gameLoop);\n\t\n        // render the scene\n        renderer.render(scene, camera);\n    }\n\n    // Setup default renderer\n    function setupRenderer(): void {\n        renderer = new Renderer({ alpha: true });\n        renderer.setClearColor(0xffffff, 0.0);\n        renderer.setSize(CScreen.WIDTH, CScreen.HEIGHT);\n        //renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.shadowMap.enabled = true;\n        console.log(\"Finished setting up Renderer...\");\n    }\n\n    // Setup main camera for the scene\n    function setupCamera(): void {\n        camera = new PerspectiveCamera(45, config.Screen.RATIO, 0.1, 1000);\n        //camera = new PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\n        camera.position.x = 0.6;\n        camera.position.y = 16;\n        camera.position.z = -20.5;\n        camera.lookAt(new Vector3(0, 0, 0));\n        console.log(\"Finished setting up Camera...\");\n    }\n\n    window.onload = init;\n\n    return {\n        scene: scene\n    }\n\n})();"],"sourceRoot":"/source/"}